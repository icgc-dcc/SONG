#
# Copyright (c) 2017 The Ontario Institute for Cancer Research. All rights reserved.
#
# This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# DCC Portal Server - Default Configuration
#

server:
  port: 8080

dcc-storage:
  url: "https://storage.cancercollaboratory.org"

# Management
management:
  port: 8081

id:
  server-instance: 0
  worker-instance: 0

validation:
  threads:
    core: 5
    max: 10
  queue:
    capacity: 100

flyway:
  baselineOnMigrate: true

auth:
  # Connection retries in case of connection failure
  connection:

    # Max number of retries
    maxRetries: 5

    # Initial timeoutMs before the first retry. In milliseconds.
    initialBackoff: 15000

    # Multiplier that defines value of consequent timeouts before the next retry.
    # E.g. TIMEOUT(n) = TIMEOUT(n-1) * MULTIPLIER
    multiplier: 2.0

---
spring.profiles: dev
spring:
  profiles:
    include: [fastTest]
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /console

auth:
  server:
    uploadScope: "upload"

# Datasource
spring.datasource:
  driver-class-name: org.h2.Driver
#  url: jdbc:h2:file:${java.io.tmpdir}/db;MULTI_THREADED=TRUE;AUTO_SERVER=TRUE;MODE=PostgreSQL;INIT=runscript from 'classpath:sql/drop_tables.sql'\;runscript from 'classpath:sql/data_types/h2.sql'\;runscript from 'classpath:sql/schema.sql'\;runscript from 'classpath:sql/insert_test_data.sql'
#  url: jdbc:h2:file:${java.io.tmpdir}/db
  url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1
  
  username:
  password:
  max-active: 10
  max-idle: 1
  min-idle: 1

flyway:
  locations: db/migration/{vendor},db/migration/data

---

spring:
  profiles: secure

auth:
  server:
    url: "http://localhost:8000/check_token/"
    clientId: "clientId"
    clientSecret: "clientSecret"
    enableStrictSSL: false
    enableHttpLogging: false
    uploadScope: "upload"
---

spring:
  profiles: fastTest

auth:
  connection:
          # Max number of retries
          maxRetries: 5

          # Initial timeoutMs before the first retry. In milliseconds.
          initialBackoff: 50

          # Multiplier that defines value of consequent timeouts before the next retry.
          # E.g. TIMEOUT(n) = TIMEOUT(n-1) * MULTIPLIER
          multiplier: 1.2

---

spring:
  profiles: prod
  
# Datasource
spring.datasource:
  driver-class-name: org.postgresql.Driver
  url: jdbc:postgresql://localhost/song

  username:
  password:
  max-active: 10
  max-idle: 1
  min-idle: 1

flyway:
  locations: db/migration/{vendor}

---
spring:
  profiles: test
  autoconfigure.exclude: SecurityConfig.class

  
